body{
    color: rgb(0, 136, 255);
    background-color: rgb(204, 222, 238);
}
.container{
    border: 3px solid rgb(255, 255, 255);
    display: grid;/*Задаем сам грид, даем понять что мы не шутим и работаем гридом*/
    grid-template-columns: 20% 20% 20%;/* сколько параметров столько и колонок fr- фаркции само делит по процентам относительно друг друга
    если много колонок то пишем repeat(кол-во колонок, тут можно написать 1-1000 колонок, они будут идти поочереди)*/
   /* grid-template-rows: 100px 400px 150px; /*тоже самое но для строк*/
    grid-column-gap: 3px;/*отступы между колонками*/
    grid-row-gap: 2px;/* Отступы между строками*/
   /* grid-gap: ; задает одинаковые отступы по колонкам и столбцам */
   grid-auto-rows: minmax(100px, auto);/*указыаем минимальное и максимальный размер ячейки, она растянется если будет надо, не работает если задано grid-template-rows*/
   justify-content: center;/*выравневание по оси X start-лево, end-право*/
   align-content: end;/*выравневание по оси Y*/
   /*align-items: end;/*выравнивание по Х относительно больших ячеек*/
  /* justify-items: end;/* выравнивание по Y относительно больших ячеек*/
}
.container2{
    display: grid;
    grid-template-areas: 
                    'header header'
                    'sidebar content';
                    grid-gap: 5px;
                    grid-template-columns: 150px 1fr;
                    grid-template-rows: 50px 1fr;
    /*border: 3px solid black;
    display: grid;/*Задаем сам грид, даем понять что мы не шутим и работаем гридом*/
    /*grid-template-columns: repeat(4, 8fr 6fr 2fr);/* сколько параметров столько и колонок fr- фаркции само делит по процентам относительно друг друга
    если много колонок то пишем repeat(кол-во колонок, тут можно написать 1-1000 колонок, они будут идти поочереди)
*/
}
.header{
grid-area: header; /*Тут мы "Вызываем" ранее описанный грид*/
}
.sidebar{
grid-area: sidebar;/*Тут мы "Вызываем" ранее описанный грид*/
align-self: start;
}
.content{
grid-area: content;/*Тут мы "Вызываем" ранее описанный грид*/
}

.item{
    /*overflow: scroll; вклюение скролла в блоке*/
    padding: 10px;
    border: 1px solid rgb(0, 17, 255);
}
.item_5{/*Свойства для какой то определенныойячейки*/
background-color: blueviolet;

}
.item_4{
    justify-self: end;/*сплюснули одну ячейку и прижали право по оси Х*/
}
.item_7{
    grid-column-start: 1;/*начало ячейки в  колонке*/
    grid-column-end: 4 ;/*конец ячейки в  колонке*/
}
.item_3{
    grid-row-start: 2;/*начало по вертикале, по строкам*/
    grid-row-end: 4;/*конец по вертикали, по строкам*/
}
.item_6{
    grid-column: 1/4;/*указывает размер в одном параметре*/
    grid-row: 2/4; /*тоже самое для вертикали*/
}
/*footer{
    width: 100%;
    height: 100px;
    color: rgb(255, 252, 97);
    margin-bottom: 5px;
    background-color: rgb(12, 12, 12);
}
*/
button{
    width: 8%;
    height: 100px;
    border-bottom: 2px;
    border-color: rgb(255, 251, 0);
    border-radius: 4px;
    background-color: rgb(0, 0, 0);
    position: relative;
    left: 50%;
    transform: translate(-50%, 0);
    color: rgb(255, 255, 255);
}
/*
.all{
    background-color: rgb(65, 62, 62);
    color: rgb(255, 252, 97);
    height: 570px;
}

.telo{
    height: 90%;
    color: rgb(255, 252, 97);
    background-color: rgb(14, 14, 14);
}*/

